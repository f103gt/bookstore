buildscript {
    ext {
        protobufVersion = '3.25.3'
        protobufPluginVersion = '0.9.4'
        grpcVersion = '1.62.2'
        reactorVersion = '3.6.4'
        reactiveGrpcVersion = '1.2.4'
        grpcSpringBootVersion = '3.0.0.RELEASE'
        grpcSpringBootVersionAutoConfig = '2.12.0.RELEASE'
        jakartaAnnotationVersion = '1.3.5'
        springBootVersion = '3.2.4'
        springDependencyManagemenetVersion = '1.1.4'
        mapstructVersion = '1.5.5.Final'
        mockitoVersion = '5.11.0'
        postgresTestContainersConfig = '1.19.7'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagemenetVersion}"
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

repositories {
    mavenCentral()
}


group = 'com.test.bookstore'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation "net.devh:grpc-spring-boot-starter:${grpcSpringBootVersion}"

    implementation "com.salesforce.servicelibs:reactor-grpc-stub:${reactiveGrpcVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "io.projectreactor:reactor-core:${reactorVersion}"

    implementation "net.devh:grpc-server-spring-boot-autoconfigure:${grpcSpringBootVersionAutoConfig}"

    implementation "io.grpc:grpc-core:${grpcVersion}"


    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    compileOnly "jakarta.annotation:jakarta.annotation-api:${jakartaAnnotationVersion}"


    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.projectreactor:reactor-test:${reactorVersion}"

    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"


    testImplementation "org.testcontainers:postgresql:${postgresTestContainersConfig}"
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        reactorGrpc {
            artifact = "com.salesforce.servicelibs:reactor-grpc:${reactiveGrpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            reactorGrpc {}
        }
    }
}
tasks.named('test') {
    useJUnitPlatform()
}