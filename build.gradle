buildscript {
    ext {
        protobufVersion = '3.25.3'
        protobufPluginVersion = '0.9.4'
        grpcVersion = '1.54.0'
        reactorVersion = '3.5.5'
        reactiveGrpcVersion = '1.2.4'
        grpcSpringBootVersion = '2.14.0.RELEASE'
        jakartaAnnotationVersion = '1.3.5'
        springBootVersion = '3.2.4'
        springDependencyManagemenetVersion = '1.1.4'
        mapstructVerion = '1.5.5.Final'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagemenetVersion}"
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

repositories {
    mavenCentral()
}


group = 'com.test.bookstore'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "io.projectreactor:reactor-core:${reactorVersion}"
    implementation "net.devh:grpc-server-spring-boot-starter:${grpcSpringBootVersion}"
    implementation "com.salesforce.servicelibs:reactor-grpc-stub:${reactiveGrpcVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVerion}"

    compileOnly 'org.projectlombok:lombok'
    compileOnly "jakarta.annotation:jakarta.annotation-api:${jakartaAnnotationVersion}"

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVerion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        reactorGrpc {
            artifact = "com.salesforce.servicelibs:reactor-grpc:${reactiveGrpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            reactorGrpc {}
        }
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
